Import base_geometry module
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

    >>> bg = BaseGeometry()

Testing for documentation
    >>> len(__import__('7-base_geometry').__doc__) > 1
    True
    >>> len(__import__('7-base_geometry').BaseGeometry.__doc__) > 1
    True
    >>> len(__import__('7-base_geometry').BaseGeometry.area.__doc__) > 1
    True
    >>> len(__import__('7-base_geometry').BaseGeometry.integer_validator.__doc__) > 1
    True

Testing for improper input
    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
        ...
    ValueError: <name> must be greater than 0

    >>> bg.integer_validator("length", 0)
    Traceback (most recent call last):
        ...
    ValueError: <name> must be greater than 0

    >>> bg.integer_validator("Float", 3.14)
    Traceback (most recent call last):
        ...
    TypeError: <name> must be an integer

    >>> bg.integer_validator("String", "Hello")
    Traceback (most recent call last):
        ...
    TypeError: <name> must be an integer
        
    >>> bg.integer_validator("None", None)
    Traceback (most recent call last):
        ...
    TypeError: <name> must be an integer

    >>> bg.integer_validator("Empty", )
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'